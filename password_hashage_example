#---Hash + Salt #1: hashlib.sha256-------------------------------------------------------
import uuid
import hashlib

def hash_password(password):
    # uuid is used to generate a random number
    salt = uuid.uuid4().hex
    return hashlib.sha256(salt.encode() + password.encode()).hexdigest() + ':' + salt

def check_password(hashed_password, user_password):
    password, salt = hashed_password.split(':')
    return password == hashlib.sha256(salt.encode() + user_password.encode()).hexdigest()

print("FirstTest\n")
print("Password #1")
new_pass = raw_input('Please enter a password: ')
hashed_password = hash_password(new_pass)
print('The string to store in the db is: ' + hashed_password)
old_pass = raw_input('Now please enter the password again to check: ')
if check_password(hashed_password, old_pass):
    print('You entered the right password')
else:
    print('I am sorry but the password does not match')

print("Password #2")
new_pass = raw_input('Please enter a password: ')
hashed_password = hash_password(new_pass)
print('The string to store in the db is: ' + hashed_password)
old_pass = raw_input('Now please enter the password again to check: ')
if check_password(hashed_password, old_pass):
    print('You entered the right password')
else:
    print('I am sorry but the password does not match')

#---Hash + Salt #2: md5------------------------------------------------------------------
#   Caution: hash password will be the same if salt position inside the password remains the same.
#            Need to change salt position for different hash password.
#   Note: An option, but not suitable/recommended due to the security vulnerabilities of MD5.

print("\nSecondTest\n")
user_entered_password = 'pa$$w0rd'
salt = "5gz"
db_password1 = user_entered_password+salt
h1 = hashlib.md5(db_password1.encode())

db_password2 = user_entered_password+salt
h2 = hashlib.md5(db_password2.encode())

db_password3 = salt+user_entered_password
h3 = hashlib.md5(db_password3.encode())

print("Password position: user_entered_password+salt --> " + h1.hexdigest())
print("Password position: user_entered_password+salt --> " + h2.hexdigest())
print("Password position: salt+user_entered_password --> " + h3.hexdigest())

#---Hash + Salt #3: passlib.sha256-------------------------------------------------------
#   Note 1: Install passLib --> pip install passlib
#   Note 2: sha256_crypt is the good import, even though they say it's an error
#   Note 3: sha256 better than md5?!
from passlib.hash import sha256_crypt

print("\nThirdTest\n")
password21 = sha256_crypt.encrypt("password")
password22 = sha256_crypt.encrypt("password")

print("Password21 = " + password21)
print("Password22 = " + password22)

print(sha256_crypt.verify("password", password21))
print(sha256_crypt.verify("password", password22))
#----------------------------------------------------------------------------------------